//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SistemaActas.ProyectoServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Proyecto", Namespace="http://schemas.datacontract.org/2004/07/WS_Actas.Model")]
    [System.SerializableAttribute()]
    public partial class Proyecto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descripcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_proyectoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string descripcion {
            get {
                return this.descripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.descripcionField, value) != true)) {
                    this.descripcionField = value;
                    this.RaisePropertyChanged("descripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_proyecto {
            get {
                return this.id_proyectoField;
            }
            set {
                if ((this.id_proyectoField.Equals(value) != true)) {
                    this.id_proyectoField = value;
                    this.RaisePropertyChanged("id_proyecto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombre {
            get {
                return this.nombreField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreField, value) != true)) {
                    this.nombreField = value;
                    this.RaisePropertyChanged("nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Acta", Namespace="http://schemas.datacontract.org/2004/07/WS_Actas.Model")]
    [System.SerializableAttribute()]
    public partial class Acta : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string anotacionesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descripcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fechaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_actaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_proyectoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string anotaciones {
            get {
                return this.anotacionesField;
            }
            set {
                if ((object.ReferenceEquals(this.anotacionesField, value) != true)) {
                    this.anotacionesField = value;
                    this.RaisePropertyChanged("anotaciones");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string descripcion {
            get {
                return this.descripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.descripcionField, value) != true)) {
                    this.descripcionField = value;
                    this.RaisePropertyChanged("descripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fecha {
            get {
                return this.fechaField;
            }
            set {
                if ((object.ReferenceEquals(this.fechaField, value) != true)) {
                    this.fechaField = value;
                    this.RaisePropertyChanged("fecha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_acta {
            get {
                return this.id_actaField;
            }
            set {
                if ((this.id_actaField.Equals(value) != true)) {
                    this.id_actaField = value;
                    this.RaisePropertyChanged("id_acta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_proyecto {
            get {
                return this.id_proyectoField;
            }
            set {
                if ((this.id_proyectoField.Equals(value) != true)) {
                    this.id_proyectoField = value;
                    this.RaisePropertyChanged("id_proyecto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombre {
            get {
                return this.nombreField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreField, value) != true)) {
                    this.nombreField = value;
                    this.RaisePropertyChanged("nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProyectoServices.IServiceProyectos")]
    public interface IServiceProyectos {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProyectos/CrearProyecto", ReplyAction="http://tempuri.org/IServiceProyectos/CrearProyectoResponse")]
        void CrearProyecto(string nombre, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProyectos/CrearProyecto", ReplyAction="http://tempuri.org/IServiceProyectos/CrearProyectoResponse")]
        System.Threading.Tasks.Task CrearProyectoAsync(string nombre, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProyectos/ObtenerProyectos", ReplyAction="http://tempuri.org/IServiceProyectos/ObtenerProyectosResponse")]
        SistemaActas.ProyectoServices.Proyecto[] ObtenerProyectos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProyectos/ObtenerProyectos", ReplyAction="http://tempuri.org/IServiceProyectos/ObtenerProyectosResponse")]
        System.Threading.Tasks.Task<SistemaActas.ProyectoServices.Proyecto[]> ObtenerProyectosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProyectos/ObtenerProyecto", ReplyAction="http://tempuri.org/IServiceProyectos/ObtenerProyectoResponse")]
        SistemaActas.ProyectoServices.Proyecto ObtenerProyecto(string idProyecto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProyectos/ObtenerProyecto", ReplyAction="http://tempuri.org/IServiceProyectos/ObtenerProyectoResponse")]
        System.Threading.Tasks.Task<SistemaActas.ProyectoServices.Proyecto> ObtenerProyectoAsync(string idProyecto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProyectos/ActualizarProyecto", ReplyAction="http://tempuri.org/IServiceProyectos/ActualizarProyectoResponse")]
        void ActualizarProyecto(int id_proyecto, string nombre, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProyectos/ActualizarProyecto", ReplyAction="http://tempuri.org/IServiceProyectos/ActualizarProyectoResponse")]
        System.Threading.Tasks.Task ActualizarProyectoAsync(int id_proyecto, string nombre, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProyectos/ObtenerActasPorProyecto", ReplyAction="http://tempuri.org/IServiceProyectos/ObtenerActasPorProyectoResponse")]
        SistemaActas.ProyectoServices.Acta[] ObtenerActasPorProyecto(string idProyecto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProyectos/ObtenerActasPorProyecto", ReplyAction="http://tempuri.org/IServiceProyectos/ObtenerActasPorProyectoResponse")]
        System.Threading.Tasks.Task<SistemaActas.ProyectoServices.Acta[]> ObtenerActasPorProyectoAsync(string idProyecto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceProyectosChannel : SistemaActas.ProyectoServices.IServiceProyectos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceProyectosClient : System.ServiceModel.ClientBase<SistemaActas.ProyectoServices.IServiceProyectos>, SistemaActas.ProyectoServices.IServiceProyectos {
        
        public ServiceProyectosClient() {
        }
        
        public ServiceProyectosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceProyectosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceProyectosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceProyectosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CrearProyecto(string nombre, string descripcion) {
            base.Channel.CrearProyecto(nombre, descripcion);
        }
        
        public System.Threading.Tasks.Task CrearProyectoAsync(string nombre, string descripcion) {
            return base.Channel.CrearProyectoAsync(nombre, descripcion);
        }
        
        public SistemaActas.ProyectoServices.Proyecto[] ObtenerProyectos() {
            return base.Channel.ObtenerProyectos();
        }
        
        public System.Threading.Tasks.Task<SistemaActas.ProyectoServices.Proyecto[]> ObtenerProyectosAsync() {
            return base.Channel.ObtenerProyectosAsync();
        }
        
        public SistemaActas.ProyectoServices.Proyecto ObtenerProyecto(string idProyecto) {
            return base.Channel.ObtenerProyecto(idProyecto);
        }
        
        public System.Threading.Tasks.Task<SistemaActas.ProyectoServices.Proyecto> ObtenerProyectoAsync(string idProyecto) {
            return base.Channel.ObtenerProyectoAsync(idProyecto);
        }
        
        public void ActualizarProyecto(int id_proyecto, string nombre, string descripcion) {
            base.Channel.ActualizarProyecto(id_proyecto, nombre, descripcion);
        }
        
        public System.Threading.Tasks.Task ActualizarProyectoAsync(int id_proyecto, string nombre, string descripcion) {
            return base.Channel.ActualizarProyectoAsync(id_proyecto, nombre, descripcion);
        }
        
        public SistemaActas.ProyectoServices.Acta[] ObtenerActasPorProyecto(string idProyecto) {
            return base.Channel.ObtenerActasPorProyecto(idProyecto);
        }
        
        public System.Threading.Tasks.Task<SistemaActas.ProyectoServices.Acta[]> ObtenerActasPorProyectoAsync(string idProyecto) {
            return base.Channel.ObtenerActasPorProyectoAsync(idProyecto);
        }
    }
}
