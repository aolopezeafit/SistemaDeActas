//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SistemaActas.UsuarioServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Usuario", Namespace="http://schemas.datacontract.org/2004/07/WS_Actas.Model")]
    [System.SerializableAttribute()]
    public partial class Usuario : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contraseñaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_usuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int identificacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contraseña {
            get {
                return this.contraseñaField;
            }
            set {
                if ((object.ReferenceEquals(this.contraseñaField, value) != true)) {
                    this.contraseñaField = value;
                    this.RaisePropertyChanged("contraseña");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_usuario {
            get {
                return this.id_usuarioField;
            }
            set {
                if ((this.id_usuarioField.Equals(value) != true)) {
                    this.id_usuarioField = value;
                    this.RaisePropertyChanged("id_usuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int identificacion {
            get {
                return this.identificacionField;
            }
            set {
                if ((this.identificacionField.Equals(value) != true)) {
                    this.identificacionField = value;
                    this.RaisePropertyChanged("identificacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombre {
            get {
                return this.nombreField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreField, value) != true)) {
                    this.nombreField = value;
                    this.RaisePropertyChanged("nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UsuarioServices.IServiceUsuarios")]
    public interface IServiceUsuarios {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuarios/CrearUsuario", ReplyAction="http://tempuri.org/IServiceUsuarios/CrearUsuarioResponse")]
        void CrearUsuario(string nombre, string contraseña, int identificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuarios/CrearUsuario", ReplyAction="http://tempuri.org/IServiceUsuarios/CrearUsuarioResponse")]
        System.Threading.Tasks.Task CrearUsuarioAsync(string nombre, string contraseña, int identificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuarios/ObtenerUsuarios", ReplyAction="http://tempuri.org/IServiceUsuarios/ObtenerUsuariosResponse")]
        SistemaActas.UsuarioServices.Usuario[] ObtenerUsuarios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuarios/ObtenerUsuarios", ReplyAction="http://tempuri.org/IServiceUsuarios/ObtenerUsuariosResponse")]
        System.Threading.Tasks.Task<SistemaActas.UsuarioServices.Usuario[]> ObtenerUsuariosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuarios/ObtenerUsuario", ReplyAction="http://tempuri.org/IServiceUsuarios/ObtenerUsuarioResponse")]
        SistemaActas.UsuarioServices.Usuario ObtenerUsuario(string idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuarios/ObtenerUsuario", ReplyAction="http://tempuri.org/IServiceUsuarios/ObtenerUsuarioResponse")]
        System.Threading.Tasks.Task<SistemaActas.UsuarioServices.Usuario> ObtenerUsuarioAsync(string idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuarios/ActualizarUsuario", ReplyAction="http://tempuri.org/IServiceUsuarios/ActualizarUsuarioResponse")]
        void ActualizarUsuario(int id_usuario, string nombre, string contraseña, int identificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuarios/ActualizarUsuario", ReplyAction="http://tempuri.org/IServiceUsuarios/ActualizarUsuarioResponse")]
        System.Threading.Tasks.Task ActualizarUsuarioAsync(int id_usuario, string nombre, string contraseña, int identificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuarios/AutenticarUsuario", ReplyAction="http://tempuri.org/IServiceUsuarios/AutenticarUsuarioResponse")]
        SistemaActas.UsuarioServices.Usuario AutenticarUsuario(int identificacion, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuarios/AutenticarUsuario", ReplyAction="http://tempuri.org/IServiceUsuarios/AutenticarUsuarioResponse")]
        System.Threading.Tasks.Task<SistemaActas.UsuarioServices.Usuario> AutenticarUsuarioAsync(int identificacion, string contraseña);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceUsuariosChannel : SistemaActas.UsuarioServices.IServiceUsuarios, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceUsuariosClient : System.ServiceModel.ClientBase<SistemaActas.UsuarioServices.IServiceUsuarios>, SistemaActas.UsuarioServices.IServiceUsuarios {
        
        public ServiceUsuariosClient() {
        }
        
        public ServiceUsuariosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceUsuariosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceUsuariosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceUsuariosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CrearUsuario(string nombre, string contraseña, int identificacion) {
            base.Channel.CrearUsuario(nombre, contraseña, identificacion);
        }
        
        public System.Threading.Tasks.Task CrearUsuarioAsync(string nombre, string contraseña, int identificacion) {
            return base.Channel.CrearUsuarioAsync(nombre, contraseña, identificacion);
        }
        
        public SistemaActas.UsuarioServices.Usuario[] ObtenerUsuarios() {
            return base.Channel.ObtenerUsuarios();
        }
        
        public System.Threading.Tasks.Task<SistemaActas.UsuarioServices.Usuario[]> ObtenerUsuariosAsync() {
            return base.Channel.ObtenerUsuariosAsync();
        }
        
        public SistemaActas.UsuarioServices.Usuario ObtenerUsuario(string idUsuario) {
            return base.Channel.ObtenerUsuario(idUsuario);
        }
        
        public System.Threading.Tasks.Task<SistemaActas.UsuarioServices.Usuario> ObtenerUsuarioAsync(string idUsuario) {
            return base.Channel.ObtenerUsuarioAsync(idUsuario);
        }
        
        public void ActualizarUsuario(int id_usuario, string nombre, string contraseña, int identificacion) {
            base.Channel.ActualizarUsuario(id_usuario, nombre, contraseña, identificacion);
        }
        
        public System.Threading.Tasks.Task ActualizarUsuarioAsync(int id_usuario, string nombre, string contraseña, int identificacion) {
            return base.Channel.ActualizarUsuarioAsync(id_usuario, nombre, contraseña, identificacion);
        }
        
        public SistemaActas.UsuarioServices.Usuario AutenticarUsuario(int identificacion, string contraseña) {
            return base.Channel.AutenticarUsuario(identificacion, contraseña);
        }
        
        public System.Threading.Tasks.Task<SistemaActas.UsuarioServices.Usuario> AutenticarUsuarioAsync(int identificacion, string contraseña) {
            return base.Channel.AutenticarUsuarioAsync(identificacion, contraseña);
        }
    }
}
